#!/usr/bin/env bash

# ========================
# Script: preprocess
# Author: Danyan Chen
# Student id : 24063952
# Description:
# This script cleans the input file and writes the result to standard output.
# It replaces semicolons with tabs, normalizes line endings, 
# fixes decimal formats, removes non-ASCII characters, and fills missing IDs
# ========================


# ---------- Get parameters & Validate parameters -------------
file_path=$1

if test $# -ne 1  
then 
    echo "Error: Expected 1 argument, but got $#, usage: ./preprocess <file_path>" >&2
    exit 1
fi

if ! echo "$file_path" | grep -q '\.txt$'
then
    echo "Error: The specified input file '$file_path' is not a txt file." >&2
    exit 1
fi

if test ! -s "$file_path"
then
    echo "Error: The specified input file '$file_path' does not exist or is empty." >&2
    exit 1
fi



# A gawk to get the largest ID
largest_id=$(gawk '
BEGIN{
    FS=";"

}



{   
    # Skip NR=1 (header)
    # Skip the empty field
    if(NR>1 && $1 ~ /^[0-9]+$/ && $1 > max)
    {
        max = $1
    }
}
END{

    print max+1
}
' "$file_path")

# ---------- Clean data -------------
# Clean input by removing all non-ASCII characters (code > 127) using tr
tr -cd '\0-\177'  < "$file_path"  | \
gawk -v next_id="$largest_id" '
BEGIN{
    FS=";"
    OFS = "\t"
}

NR == 1 {
    # Convert header line 
    gsub(/;/, "\t")
    print
    next
}

{ 


    # Convert the Microsoft line endings to Unix line endings
    gsub(/\r/, "")


    # Replace commas with dots in numeric fields
    for(i=1;i<=NF;i++)
    {
        if ($i ~ /^[0-9][0-9]*,[0-9][0-9]*$/)
        {
            gsub(/,/,".",$i)
        }
    }
    
    # Deal with the empty id
    if($1  ~ /^[ \t]*$/ )
    {
        $1 = next_id++
    }

    print 
}
' 

